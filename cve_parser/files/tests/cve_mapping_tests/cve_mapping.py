import json


def get_cve_mapping(data):
    '''Creates dict mapping based on OS as root level, version of the OS as sub-level and list of vulnerabilities that affect the version of OS'''
    cve_dict = {}

    # Cisco PSIRT API only supports IOS/IOSXE and NXOS, we only look for this
    for result in data['results']:
        for cve in result['json']['advisories']:
            version = cve['iosRelease'][0]
            if version not in cve_dict:
                cve_dict[version] = []

            cve_info = {}
            cve_info['cve'] = cve['cves']
            cve_info['title'] = cve['advisoryTitle']
            cve_info['severity'] = cve['set']
            if 'platforms' in cve:
                for platform in cve['platforms']:
                    if 'Nexus 9000' in platform['name']:
                        cve_info['fixed_version'] = platform['firstFixes'][0]['name']
            else:
                cve_info['fixed_version'] = cve['firstFixed']
            cve_dict[version].append(cve_info)

    return cve_dict


with open('ios.json') as file:
    data = json.load(file)
    print(get_cve_mapping(data))
