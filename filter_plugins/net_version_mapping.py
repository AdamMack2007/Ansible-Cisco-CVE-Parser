#!/usr/bin/python
class FilterModule(object):
    def filters(self):
        return {'net_version_mapping': self.get_version_mapping}

    def get_version_mapping(self, data):
        '''Creates dict mapping based on OS as root level, version of the OS as sub-level and list of hosts of that version of OS
        Example output can be found in files/net_version_mapping_example.json'''

        os_dict = {}

        # Cisco PSIRT API only supports IOS/IOSXE and NXOS, we only look for these platforms

        for key, value in data.items():
            if value['ansible_network_os'] == 'ios':
                if 'ansible_net_iostype' in value:
                    # Filter by ansible_net_iostype fact to determine which vulnerability list to query
                    if value['ansible_net_iostype'] == 'IOS-XE':
                        os = 'iosxe'
                    else:
                        os = 'ios'

                    version = value['ansible_net_version']

                    if os not in os_dict:
                        os_dict[os] = {}
                    if version not in os_dict[os]:
                        os_dict[os][version] = {}
                        os_dict[os][version]['hosts'] = []
                    os_dict[os][version]['hosts'].append(key)

            elif value['ansible_network_os'] == 'nxos':
                os = value['ansible_network_os']
                version = value['ansible_net_version']

                if os not in os_dict:
                    os_dict[os] = {}
                if version not in os_dict[os]:
                    os_dict[os][version] = {}
                    os_dict[os][version]['hosts'] = []
                os_dict[os][version]['hosts'].append(key)

        return os_dict
